list := (\x -> \f ->
    l := {};
    l."head" := x;
    l."tail" := (\ ->
        x := f ();
        l."tail" = (\ -> x);
        x
    );
    l
);

drop := (\n -> \l ->
    loop := (\n ->
        return l if n == 0;
        l = l."tail" ();
        loop (n - 1)
    );
    loop n
);

zipWith := (\f -> \l0 -> \l1 ->
    list
        (f l0."head" l1."head")
        (\ -> zipWith f (l0."tail" ()) (l1."tail" ()))
);

fibs := list 0 (\ ->
    list 1 (\ ->
        zipWith (\a -> \b -> a + b) fibs (fibs."tail" ())
    )
);

(\ ->
    (drop 45 fibs)."head"
) ()
