list := (\x f ->
    l := {};
    l."head" := x;
    l."tail" := (\ ->
        x := f ();
        l."tail" = (\ -> x);
        x
    );
    l
);

drop := (\n l ->
    if n == 0 then
        l
    else
        drop (n - 1) (l."tail" ())
);

zipWith := (\f l0 l1 ->
    list
        (f l0."head" l1."head")
        \ -> zipWith f (l0."tail" ()) (l1."tail" ())
);

fibs := (
    list 0 \ ->
        list 1 \ ->
            zipWith (\a b -> a + b) fibs (fibs."tail" ())
);

(\ ->
    print (toString (drop 45 fibs)."head");
    print "\n"
) ()
